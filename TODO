SuperTux Editor
===============

* +/- zoom buttons do not zoom to the center of the screen

* Object Tool should behave more like Inkscape:

  - LMB on an object to select
  - LMB on the background to start a select-rectangle
  - LMB+move to drag objects it around
  - Shift+LMB to add an object to the selection
  - RMB for context menu

* Select Tool should be removed (identical to Object Tool)

* replace tool crashes:

  Note: Applications can use GLib.ExceptionManager.UnhandledException to handle the exception.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
  at System.Collections.Generic.Dictionary`2[System.Object,System.Single].get_Item (System.Object key) [0x00000] 
  at LayerListWidget.VisibilityDataFunc (Gtk.TreeViewColumn Column, Gtk.CellRenderer Renderer, TreeModel Model, TreeIter Iter) [0x00000] 
  at GtkSharp.TreeCellDataFuncWrapper.NativeCallback (IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data) [0x00000] 
   at GLib.ExceptionManager.RaiseUnhandledException(System.Exception e, Boolean is_terminal)
   at GtkSharp.TreeCellDataFuncWrapper.NativeCallback(IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data)
   at Gtk.Application.gtk_main()
   at Gtk.Application.Run()
   at Application.Main(System.String[] args)

DEBUG: UndoManager.AddCommand(Replace Tiles on Tilemap "Interactive")
DEBUG: UndoManager.AddCommand(Replace Tiles on Tilemap "Interactive")
Exception in Gtk# callback delegate
  Note: Applications can use GLib.ExceptionManager.UnhandledException to handle the exception.
System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
  at System.Collections.Generic.Dictionary`2[System.Object,System.Single].get_Item (System.Object key) [0x00000] 
  at LayerListWidget.VisibilityDataFunc (Gtk.TreeViewColumn Column, Gtk.CellRenderer Renderer, TreeModel Model, TreeIter Iter) [0x00000] 
  at GtkSharp.TreeCellDataFuncWrapper.NativeCallback (IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data) [0x00000] 
   at GLib.ExceptionManager.RaiseUnhandledException(System.Exception e, Boolean is_terminal)
   at GtkSharp.TreeCellDataFuncWrapper.NativeCallback(IntPtr tree_column, IntPtr cell, IntPtr tree_model, IntPtr iter, IntPtr data)
   at Gtk.Application.gtk_main()
   at Gtk.Application.Run()
   at Application.Main(System.String[] args)

DEBUG: UndoManager.AddCommand(Moved Object SequenceTrigger)
DEBUG: ObjectsEditor:MakeActive(ObjectsTool+ControlPoint)
DEBUG: UndoManager.AddCommand(Moved Object ObjectsTool+ControlPoint)
DEBUG: ObjectsEditor:MakeActive(SequenceTrigger)
Stacktrace:

  at (wrapper managed-to-native) System.MonoType.getFullName (bool,bool) <0x00004>
  at (wrapper managed-to-native) System.MonoType.getFullName (bool,bool) <0xffffffff>
  at System.MonoType.ToString () <0x00014>
  at object.ToString () <0x00019>
  at string.Concat (object,object,object) <0x0004b>
Bus error

* Replace Tool should document its functions in a status bar message

* Path Tool doesn't seem to do anything

* Tiles Tool doesn't display the current tile

* add a Sector Menu in the main menubar containing:

  New Sector
  Delete Sector
  Resize Sector
  Sector Properties
  Camera Properties

* make Object Properties a separate Window, instead of having it in a
  VPaned (having it dockable like in Gimp would be best, but likely to
  complicated to do in Gtk+)

* naming cleanup (I am not familiar with the code or C#, so
  suggestions might be stupid):

  IEditor -> ITool (along with directory and other tools)
  ObjectCreationEditor -> SelectTool
  Selection -> TileSelection

* whats the point of empty interfaces (IGameObject)?

* move source code to src/

* split external stuff to external/

* what about some line-breaking to avoid >150 characters per line?

* Do we use the SceneGraph stuff?

* Which code-style/style-guide do we follow?

  -> astyle -t8 

* Why TileBlock::SaveData and not just a full clone of TileBlock?

* Use one file per class

* add proper copyright header

* LispChild attributes seems a little impractical right now, as they
  code to handle them is larger then the code to do it manually

# EOF #
